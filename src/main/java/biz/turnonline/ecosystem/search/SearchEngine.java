/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2020-07-22 at 10:19:03 UTC
 * Modify at your own risk.
 */

package biz.turnonline.ecosystem.search;

/**
 * Service definition for SearchEngine (v1).
 *
 * <p>
 * TurnOnline.biz Ecosystem Search Engine for Ecosystem related documents
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.turnonline.biz/docs/search.turnon.cloud/1" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SearchEngineRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @author Google, Inc.
 * @since 1.3
 */
@SuppressWarnings( "javadoc" )
public class SearchEngine
        extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient
{

    /**
     * The default encoded root URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_ROOT_URL = "https://search.turnonline.cloud/_ah/api/";

    /**
     * The default encoded service path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_SERVICE_PATH = "search/v1/";

    /**
     * The default encoded batch path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.23
     */
    public static final String DEFAULT_BATCH_PATH = "batch";

    /**
     * The default encoded base URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     */
    public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

    // Note: Leave this static initializer at the top of the file.
    static
    {
        com.google.api.client.util.Preconditions.checkState(
                com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
                        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
                "You are currently running with version %s of google-api-client. " +
                        "You need at least version 1.15 of google-api-client to run version " +
                        "1.25.0 of the TurnOnline.biz Search Engine library.", com.google.api.client.googleapis.GoogleUtils.VERSION );
    }

    /**
     * Constructor.
     *
     * <p>
     * Use {@link Builder} if you need to specify any of the optional parameters.
     * </p>
     *
     * @param transport              HTTP transport, which should normally be:
     *                               <ul>
     *                               <li>Google App Engine:
     *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *                               <li>Android: {@code newCompatibleTransport} from
     *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *                               </li>
     *                               </ul>
     * @param jsonFactory            JSON factory, which may be:
     *                               <ul>
     *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *                               <li>Android Honeycomb or higher:
     *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *                               </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public SearchEngine( com.google.api.client.http.HttpTransport transport,
                         com.google.api.client.json.JsonFactory jsonFactory,
                         com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
    {
        this( new Builder( transport, jsonFactory, httpRequestInitializer ) );
    }

    /**
     * @param builder builder
     */
    SearchEngine( Builder builder )
    {
        super( builder );
    }

    @Override
    protected void initialize( com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest )
            throws java.io.IOException
    {
        super.initialize( httpClientRequest );
    }

    /**
     * An accessor for creating requests from the Accounts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SearchEngine search = new SearchEngine(...);}
     *   {@code SearchEngine.Accounts.List request = search.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts()
    {
        return new Accounts();
    }

    /**
     * An accessor for creating requests from the Contacts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SearchEngine search = new SearchEngine(...);}
     *   {@code SearchEngine.Contacts.List request = search.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts()
    {
        return new Contacts();
    }

    /**
     * An accessor for creating requests from the Invoices collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SearchEngine search = new SearchEngine(...);}
     *   {@code SearchEngine.Invoices.List request = search.invoices().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Invoices invoices()
    {
        return new Invoices();
    }

    /**
     * An accessor for creating requests from the Orders collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SearchEngine search = new SearchEngine(...);}
     *   {@code SearchEngine.Orders.List request = search.orders().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Orders orders()
    {
        return new Orders();
    }

    /**
     * An accessor for creating requests from the Products collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SearchEngine search = new SearchEngine(...);}
     *   {@code SearchEngine.Products.List request = search.products().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Products products()
    {
        return new Products();
    }

    /**
     * Create a request for the method "global".
     * <p>
     * This request holds the parameters needed by the search server.  After setting any optional
     * parameters, call the {@link Global#execute()} method to invoke the remote operation.
     *
     * @param query
     * @return the request
     */
    public Global global( java.lang.String query ) throws java.io.IOException
    {
        Global result = new Global( query );
        initialize( result );
        return result;
    }

    /**
     * Builder for {@link SearchEngine}.
     *
     * <p>
     * Implementation is not thread-safe.
     * </p>
     *
     * @since 1.3.0
     */
    public static final class Builder
            extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder
    {

        /**
         * Returns an instance of a new builder.
         *
         * @param transport              HTTP transport, which should normally be:
         *                               <ul>
         *                               <li>Google App Engine:
         *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
         *                               <li>Android: {@code newCompatibleTransport} from
         *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
         *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
         *                               </li>
         *                               </ul>
         * @param jsonFactory            JSON factory, which may be:
         *                               <ul>
         *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
         *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
         *                               <li>Android Honeycomb or higher:
         *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
         *                               </ul>
         * @param httpRequestInitializer HTTP request initializer or {@code null} for none
         * @since 1.7
         */
        public Builder( com.google.api.client.http.HttpTransport transport,
                        com.google.api.client.json.JsonFactory jsonFactory,
                        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            super(
                    transport,
                    jsonFactory,
                    DEFAULT_ROOT_URL,
                    DEFAULT_SERVICE_PATH,
                    httpRequestInitializer,
                    false );
            setBatchPath( DEFAULT_BATCH_PATH );
        }

        /**
         * Builds a new instance of {@link SearchEngine}.
         */
        @Override
        public SearchEngine build()
        {
            return new SearchEngine( this );
        }

        @Override
        public Builder setRootUrl( String rootUrl )
        {
            return ( Builder ) super.setRootUrl( rootUrl );
        }

        @Override
        public Builder setServicePath( String servicePath )
        {
            return ( Builder ) super.setServicePath( servicePath );
        }

        @Override
        public Builder setBatchPath( String batchPath )
        {
            return ( Builder ) super.setBatchPath( batchPath );
        }

        @Override
        public Builder setHttpRequestInitializer( com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            return ( Builder ) super.setHttpRequestInitializer( httpRequestInitializer );
        }

        @Override
        public Builder setApplicationName( String applicationName )
        {
            return ( Builder ) super.setApplicationName( applicationName );
        }

        @Override
        public Builder setSuppressPatternChecks( boolean suppressPatternChecks )
        {
            return ( Builder ) super.setSuppressPatternChecks( suppressPatternChecks );
        }

        @Override
        public Builder setSuppressRequiredParameterChecks( boolean suppressRequiredParameterChecks )
        {
            return ( Builder ) super.setSuppressRequiredParameterChecks( suppressRequiredParameterChecks );
        }

        @Override
        public Builder setSuppressAllChecks( boolean suppressAllChecks )
        {
            return ( Builder ) super.setSuppressAllChecks( suppressAllChecks );
        }

        /**
         * Set the {@link SearchEngineRequestInitializer}.
         *
         * @since 1.12
         */
        public Builder setSearchEngineRequestInitializer(
                SearchEngineRequestInitializer searchengineRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( searchengineRequestInitializer );
        }

        @Override
        public Builder setGoogleClientRequestInitializer(
                com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( googleClientRequestInitializer );
        }
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts
    {

        /**
         * Create a request for the method "accounts.delete".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId
         * @return the request
         */
        public Delete delete( java.lang.String accountId ) throws java.io.IOException
        {
            Delete result = new Delete( accountId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.get".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId
         * @return the request
         */
        public Get get( java.lang.String accountId ) throws java.io.IOException
        {
            Get result = new Get( accountId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.list".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param query
         * @return the request
         */
        public List list( java.lang.String query ) throws java.io.IOException
        {
            List result = new List( query );
            initialize( result );
            return result;
        }

        public class Delete
                extends SearchEngineRequest<Void>
        {

            private static final String REST_PATH = "accounts/{accountId}";

            @com.google.api.client.util.Key
            private java.lang.String accountId;

            /**
             * Create a request for the method "accounts.delete".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId
             * @since 1.13
             */
            protected Delete( java.lang.String accountId )
            {
                super( SearchEngine.this, "DELETE", REST_PATH, null, Void.class );
                this.accountId = com.google.api.client.util.Preconditions.checkNotNull( accountId, "Required parameter accountId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getAccountId()
            {
                return accountId;
            }

            public Delete setAccountId( java.lang.String accountId )
            {
                this.accountId = accountId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.Account>
        {

            private static final String REST_PATH = "accounts/{accountId}";

            @com.google.api.client.util.Key
            private java.lang.String accountId;

            /**
             * Create a request for the method "accounts.get".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId
             * @since 1.13
             */
            protected Get( java.lang.String accountId )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.Account.class );
                this.accountId = com.google.api.client.util.Preconditions.checkNotNull( accountId, "Required parameter accountId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getAccountId()
            {
                return accountId;
            }

            public Get setAccountId( java.lang.String accountId )
            {
                this.accountId = accountId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.AccountCollection>
        {

            private static final String REST_PATH = "accounts";

            @com.google.api.client.util.Key
            private java.lang.String query;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "accounts.list".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param query
             * @since 1.13
             */
            protected List( java.lang.String query )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.AccountCollection.class );
                this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getQuery()
            {
                return query;
            }

            public List setQuery( java.lang.String query )
            {
                this.query = query;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts
    {

        /**
         * Create a request for the method "contacts.delete".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param contactId
         * @return the request
         */
        public Delete delete( java.lang.String contactId ) throws java.io.IOException
        {
            Delete result = new Delete( contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.get".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param contactId
         * @return the request
         */
        public Get get( java.lang.String contactId ) throws java.io.IOException
        {
            Get result = new Get( contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.list".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param query
         * @return the request
         */
        public List list( java.lang.String query ) throws java.io.IOException
        {
            List result = new List( query );
            initialize( result );
            return result;
        }

        public class Delete
                extends SearchEngineRequest<Void>
        {

            private static final String REST_PATH = "contacts/{contactId}";

            @com.google.api.client.util.Key
            private java.lang.String contactId;

            /**
             * Create a request for the method "contacts.delete".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param contactId
             * @since 1.13
             */
            protected Delete( java.lang.String contactId )
            {
                super( SearchEngine.this, "DELETE", REST_PATH, null, Void.class );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getContactId()
            {
                return contactId;
            }

            public Delete setContactId( java.lang.String contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.Contact>
        {

            private static final String REST_PATH = "contacts/{contactId}";

            @com.google.api.client.util.Key
            private java.lang.String contactId;

            /**
             * Create a request for the method "contacts.get".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param contactId
             * @since 1.13
             */
            protected Get( java.lang.String contactId )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.Contact.class );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getContactId()
            {
                return contactId;
            }

            public Get setContactId( java.lang.String contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.ContactCollection>
        {

            private static final String REST_PATH = "contacts";

            @com.google.api.client.util.Key
            private java.lang.String query;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "contacts.list".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param query
             * @since 1.13
             */
            protected List( java.lang.String query )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.ContactCollection.class );
                this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getQuery()
            {
                return query;
            }

            public List setQuery( java.lang.String query )
            {
                this.query = query;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "invoices" collection of methods.
     */
    public class Invoices
    {

        /**
         * Create a request for the method "invoices.delete".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param invoiceId
         * @return the request
         */
        public Delete delete( java.lang.String invoiceId ) throws java.io.IOException
        {
            Delete result = new Delete( invoiceId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "invoices.get".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param invoiceId
         * @return the request
         */
        public Get get( java.lang.String invoiceId ) throws java.io.IOException
        {
            Get result = new Get( invoiceId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "invoices.list".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param query
         * @return the request
         */
        public List list( java.lang.String query ) throws java.io.IOException
        {
            List result = new List( query );
            initialize( result );
            return result;
        }

        public class Delete
                extends SearchEngineRequest<Void>
        {

            private static final String REST_PATH = "invoices/{invoiceId}";

            @com.google.api.client.util.Key
            private java.lang.String invoiceId;

            /**
             * Create a request for the method "invoices.delete".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param invoiceId
             * @since 1.13
             */
            protected Delete( java.lang.String invoiceId )
            {
                super( SearchEngine.this, "DELETE", REST_PATH, null, Void.class );
                this.invoiceId = com.google.api.client.util.Preconditions.checkNotNull( invoiceId, "Required parameter invoiceId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getInvoiceId()
            {
                return invoiceId;
            }

            public Delete setInvoiceId( java.lang.String invoiceId )
            {
                this.invoiceId = invoiceId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.Invoice>
        {

            private static final String REST_PATH = "invoices/{invoiceId}";

            @com.google.api.client.util.Key
            private java.lang.String invoiceId;

            /**
             * Create a request for the method "invoices.get".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param invoiceId
             * @since 1.13
             */
            protected Get( java.lang.String invoiceId )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.Invoice.class );
                this.invoiceId = com.google.api.client.util.Preconditions.checkNotNull( invoiceId, "Required parameter invoiceId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getInvoiceId()
            {
                return invoiceId;
            }

            public Get setInvoiceId( java.lang.String invoiceId )
            {
                this.invoiceId = invoiceId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.InvoiceCollection>
        {

            private static final String REST_PATH = "invoices";

            @com.google.api.client.util.Key
            private java.lang.String query;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "invoices.list".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param query
             * @since 1.13
             */
            protected List( java.lang.String query )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.InvoiceCollection.class );
                this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getQuery()
            {
                return query;
            }

            public List setQuery( java.lang.String query )
            {
                this.query = query;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "orders" collection of methods.
     */
    public class Orders
    {

        /**
         * Create a request for the method "orders.delete".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param orderId
         * @return the request
         */
        public Delete delete( java.lang.String orderId ) throws java.io.IOException
        {
            Delete result = new Delete( orderId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "orders.get".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param orderId
         * @return the request
         */
        public Get get( java.lang.String orderId ) throws java.io.IOException
        {
            Get result = new Get( orderId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "orders.list".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param query
         * @return the request
         */
        public List list( java.lang.String query ) throws java.io.IOException
        {
            List result = new List( query );
            initialize( result );
            return result;
        }

        public class Delete
                extends SearchEngineRequest<Void>
        {

            private static final String REST_PATH = "orders/{orderId}";

            @com.google.api.client.util.Key
            private java.lang.String orderId;

            /**
             * Create a request for the method "orders.delete".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param orderId
             * @since 1.13
             */
            protected Delete( java.lang.String orderId )
            {
                super( SearchEngine.this, "DELETE", REST_PATH, null, Void.class );
                this.orderId = com.google.api.client.util.Preconditions.checkNotNull( orderId, "Required parameter orderId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getOrderId()
            {
                return orderId;
            }

            public Delete setOrderId( java.lang.String orderId )
            {
                this.orderId = orderId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.Order>
        {

            private static final String REST_PATH = "orders/{orderId}";

            @com.google.api.client.util.Key
            private java.lang.String orderId;

            /**
             * Create a request for the method "orders.get".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param orderId
             * @since 1.13
             */
            protected Get( java.lang.String orderId )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.Order.class );
                this.orderId = com.google.api.client.util.Preconditions.checkNotNull( orderId, "Required parameter orderId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getOrderId()
            {
                return orderId;
            }

            public Get setOrderId( java.lang.String orderId )
            {
                this.orderId = orderId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.OrderCollection>
        {

            private static final String REST_PATH = "orders";

            @com.google.api.client.util.Key
            private java.lang.String query;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "orders.list".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param query
             * @since 1.13
             */
            protected List( java.lang.String query )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.OrderCollection.class );
                this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getQuery()
            {
                return query;
            }

            public List setQuery( java.lang.String query )
            {
                this.query = query;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "products" collection of methods.
     */
    public class Products
    {

        /**
         * Create a request for the method "products.delete".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param productId
         * @return the request
         */
        public Delete delete( java.lang.String productId ) throws java.io.IOException
        {
            Delete result = new Delete( productId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "products.get".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param productId
         * @return the request
         */
        public Get get( java.lang.String productId ) throws java.io.IOException
        {
            Get result = new Get( productId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "products.list".
         * <p>
         * This request holds the parameters needed by the search server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param query
         * @return the request
         */
        public List list( java.lang.String query ) throws java.io.IOException
        {
            List result = new List( query );
            initialize( result );
            return result;
        }

        public class Delete
                extends SearchEngineRequest<Void>
        {

            private static final String REST_PATH = "products/{productId}";

            @com.google.api.client.util.Key
            private java.lang.String productId;

            /**
             * Create a request for the method "products.delete".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param productId
             * @since 1.13
             */
            protected Delete( java.lang.String productId )
            {
                super( SearchEngine.this, "DELETE", REST_PATH, null, Void.class );
                this.productId = com.google.api.client.util.Preconditions.checkNotNull( productId, "Required parameter productId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getProductId()
            {
                return productId;
            }

            public Delete setProductId( java.lang.String productId )
            {
                this.productId = productId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.Product>
        {

            private static final String REST_PATH = "products/{productId}";

            @com.google.api.client.util.Key
            private java.lang.String productId;

            /**
             * Create a request for the method "products.get".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param productId
             * @since 1.13
             */
            protected Get( java.lang.String productId )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.Product.class );
                this.productId = com.google.api.client.util.Preconditions.checkNotNull( productId, "Required parameter productId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getProductId()
            {
                return productId;
            }

            public Get setProductId( java.lang.String productId )
            {
                this.productId = productId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.ProductCollection>
        {

            private static final String REST_PATH = "products";

            @com.google.api.client.util.Key
            private java.lang.String query;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "products.list".
             * <p>
             * This request holds the parameters needed by the the search server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param query
             * @since 1.13
             */
            protected List( java.lang.String query )
            {
                super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.ProductCollection.class );
                this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getQuery()
            {
                return query;
            }

            public List setQuery( java.lang.String query )
            {
                this.query = query;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    public class Global
            extends SearchEngineRequest<biz.turnonline.ecosystem.search.model.GlobalCollection>
    {

        private static final String REST_PATH = "global";

        @com.google.api.client.util.Key
        private java.lang.String query;

        @com.google.api.client.util.Key
        private java.lang.Integer limit;

        @com.google.api.client.util.Key
        private java.lang.Integer offset;

        /**
         * Create a request for the method "global".
         * <p>
         * This request holds the parameters needed by the the search server.  After setting any optional
         * parameters, call the {@link Global#execute()} method to invoke the remote operation. <p> {@link
         * Global#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param query
         * @since 1.13
         */
        protected Global( java.lang.String query )
        {
            super( SearchEngine.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.search.model.GlobalCollection.class );
            this.query = com.google.api.client.util.Preconditions.checkNotNull( query, "Required parameter query must be specified." );
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
        {
            return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
        {
            return super.buildHttpRequestUsingHead();
        }

        @Override
        public Global setAlt( java.lang.String alt )
        {
            return ( Global ) super.setAlt( alt );
        }

        @Override
        public Global setFields( java.lang.String fields )
        {
            return ( Global ) super.setFields( fields );
        }

        @Override
        public Global setKey( java.lang.String key )
        {
            return ( Global ) super.setKey( key );
        }

        @Override
        public Global setOauthToken( java.lang.String oauthToken )
        {
            return ( Global ) super.setOauthToken( oauthToken );
        }

        @Override
        public Global setPrettyPrint( java.lang.Boolean prettyPrint )
        {
            return ( Global ) super.setPrettyPrint( prettyPrint );
        }

        @Override
        public Global setQuotaUser( java.lang.String quotaUser )
        {
            return ( Global ) super.setQuotaUser( quotaUser );
        }

        @Override
        public Global setUserIp( java.lang.String userIp )
        {
            return ( Global ) super.setUserIp( userIp );
        }

        /**
         *
         */
        public java.lang.String getQuery()
        {
            return query;
        }

        public Global setQuery( java.lang.String query )
        {
            this.query = query;
            return this;
        }

        /**
         * [ default: 5]
         * [
         */
        public java.lang.Integer getLimit()
        {
            return limit;
        }

        public Global setLimit( java.lang.Integer limit )
        {
            this.limit = limit;
            return this;
        }

        /**
         * [ default: 0]
         * [
         */
        public java.lang.Integer getOffset()
        {
            return offset;
        }

        public Global setOffset( java.lang.Integer offset )
        {
            this.offset = offset;
            return this;
        }

        @Override
        public Global set( String parameterName, Object value )
        {
            return ( Global ) super.set( parameterName, value );
        }
    }
}
